Secure EFI Loader
=================

The SELoader is designed to authenticate the non-PE files which cannot
be verified by the MOK verify protocol supplied by shim loader, such as grub
configuration, initrd, grub modules and so on.

The SELoader employs PKCS7 Verify Protocol available since UEFI Specification
version 2.5 to verify the signature to prove the integrity of checked file. If
BIOS doesn't support it, a pre-built Pkcs7VerifyDxe driver is provided.

In order to estabilish the chain of trust, the SELoader is required to be
signed by a private key corresponding to a DB certificate, the shim
certificate, the vendor certificate or a shim MOK certificate. The specifical
key is determined by the Secure Boot scheme you will use.

Using UEFI Secure Boot, MOK verify protocol and SELoader together, the boot
process will be completely trustworthy.

Use Pkcs7VerifyDxe.efi
----------------------
If your BIOS doesn't support PKCS7 Verify Protocol, it is recommended to
update to the latest. If the latest still doesn't support it, the SELoader
is able to attempt to load the Pkcs7VerifyDxe.efi driver if available.
Usually, the Pkcs7VerifyDxe.efi driver is located in the directory where
the SELoader resides on ESP.

You can build the Pkcs7VerifyDxe.efi driver from the scratch if you would
like to do it. Refer to Bin/README for the instructions.

Known Issues
------------
- The PKCS#7 detached signature format (.p7s) is not supported.

References
----------
libsign - the signing tool used to generate SELoader PKCS#7 signature
https://github.com/jiazhang0/libsign

shim - implement MOK verify protocol
https://github.com/rhinstaller/shim

edk2 - UEFI-related header files
https://github.com/tianocore/edk2

meta-secure-env - a practical secure boot implementation based on oe-core
https://github.com/WindRiver-OpenSourceLabs/meta-secure-env
